{"version":3,"sources":["utils/validators/validators.js","components/common/FormControl/FormControls.jsx","components/common/FormControl/FormControls.module.css","imgs/profile_default_pic.png","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","components/users/User.jsx","components/users/Users.jsx","components/users/UsersContainer.jsx"],"names":["required","value","maxLengthC","length","Element","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","active","Post","href","src","img","alt","title","name","text","likes","maxLength30","Input","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","type","placeholder","validate","MyPosts","memo","posts","state","map","post","id","data","addPost","MyPostsContainer","connect","profilePage","dispatch","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","isOwner","Profile","profile","photos","large","profile_default_pic","for","class","target","files","savePhoto","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","Preloader","User","to","user","small","followed","onClick","unfollowUser","disabled","isFollowingInProgress","some","followUser","Users","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","Pagination","count","page","currentPage","event","onPageChanged","siblingCount","isFetching","users","UsersContainer","history","queryString","parse","this","location","search","Number","requestUsers","pageChangedOnUrl","prevProps","prevState","followingInProgress","React","Component","mapDispatchToProps","setCurrentPage","usersPage","withRouter"],"mappings":"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","file":"static/js/5.50be5b7e.chunk.js","sourcesContent":["export const required = value => {\r\n  if (!value) return 'Required!'\r\n  return undefined\r\n}\r\n\r\nexport const maxLengthC = (length) => (value) => {\r\n  if (value && value.length > length) return `Max length is ${length}`\r\n  return undefined\r\n}","import styles from './FormControls.module.css'\r\n\r\n// \r\n// solution from youtube \r\n// for work in Field need //// const Input = Element(\"input\");\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n    <Element {...input} {...props} />\r\n    {hasError && <span>{meta.error}</span>}\r\n  </div>\r\n};\r\n\r\n\r\n// \r\n// my solution\r\n// const FormControl = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n//     {props.children}\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }\r\n\r\n// export const Input = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// export const Textarea = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n\r\n// OLD\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${ hasError ? styles.error : ''}`}>\r\n//     <input {...input} {...props}/>\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3WObq\",\"error\":\"FormControls_error__teiEC\"};","export default __webpack_public_path__ + \"static/media/profile_default_pic.33564136.png\";","import './Post.css';\r\n// import Like from './../../../../imgs/like.svg';\r\nvar active = ''\r\n\r\nconst Post = (props) => {\r\n  if (props.active === '1') {\r\n    active = 'active'\r\n  } else {\r\n    active = ''\r\n  }\r\n  \r\n  // console.log(active)\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_top\">\r\n        <a href=\"#s\" className=\"post_img\">\r\n          <img src={props.img} alt=\"\" title={props.name} />\r\n        </a>\r\n        <div className=\"post_text\">{props.text}</div>\r\n      </div>\r\n      <div className=\"post_bottom\">\r\n        <button className={`post_like ${active}`}>\r\n          <img src=\"\" alt=\"\" />\r\n        </button>\r\n        <span className=\"post_like__count\">{props.likes}</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import './MyPosts.css';\r\nimport Post from './Posts/Post';\r\nimport React, { memo } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthC, required } from '../../../utils/validators/validators'\r\n// import { Input } from './../../common/FormControl/FormControls';\r\nimport { Element } from './../../common/FormControl/FormControls';\r\n\r\n// onKeyDown={newFun} onChange={updatePost} value={props.state.newPostText}\r\nconst maxLength30 = maxLengthC(30)\r\n\r\n// for Field component={}\r\nconst Input = Element(\"input\");\r\n\r\nlet MyPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} className=\"posts_form\">\r\n    <Field component={Input} name=\"text\" type=\"text\" className=\"posts_input\" placeholder=\"Your news...\" validate={[maxLength30, required]}/>\r\n    <button type=\"submit\" className=\"posts_btn\">Send</button>\r\n  </form>\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'MyPost' })(MyPostForm)\r\n\r\nconst MyPosts = memo(props => {\r\n  let posts = props.state.posts.map(post => <Post id={post.id} img={post.img} name={post.name} text={post.text} likes={post.likes} active={post.active} key={post.id} />)\r\n\r\n  // let addPost = () => {\r\n  //   props.addPost()\r\n  // }\r\n\r\n  // let updatePost = (e) => {\r\n  //   let text = e.target.value;\r\n  //   props.updatePostText(text)\r\n  // }\r\n\r\n  // let newFun = (e) => {\r\n  //   if (e.keyCode === 13) {\r\n  //     addPost();\r\n  //   }\r\n  // }\r\n\r\n  let addNewPost = (data) => {\r\n    props.addPost(data.text)\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile_item my_posts\">\r\n      <div className=\"my_posts__inner\">\r\n        <div className=\"posts_title profile_title\">My posts</div>\r\n        <MyPostReduxForm onSubmit={addNewPost}/>\r\n        <div className=\"posts\">\r\n          {posts}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts","import { addPost } from './../../../redux/reducers/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {\r\n//         (store) => {\r\n//           let state = store.getState()\r\n\r\n//           let onAddPost = () => {\r\n//             // props.addPost()\r\n//             // props.dispatch({type: 'ADD-POST'})\r\n//             store.dispatch(addPostActionCreate())\r\n//           }\r\n\r\n//           let updatePost = (text) => {\r\n//             // let text = newPostElement.current.value;\r\n//             // props.updatePostText(text)\r\n//             // props.dispatch({type: 'UPDATE-POST-TEXT', text: text})\r\n//             store.dispatch(updatePostTextActionCreate(text))\r\n//           }\r\n//           return (\r\n//             <MyPosts state={state.profilePage} addPost={onAddPost} updatePostText={updatePost} />\r\n//           )\r\n//         }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {state: state.profilePage}\r\n  )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return (\r\n    {\r\n    addPost: (text) => {\r\n      dispatch(addPost(text))\r\n    },\r\n    // updatePostText: (text) => {\r\n    //   dispatch(updatePostTextActionCreate(text))\r\n    // },\r\n    }\r\n  )\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  // let editMode = stateWithSetState[0]\r\n  // let setEditMode = stateWithSetState[1]\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  const enableEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true)\r\n    }\r\n  }\r\n  const disableEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  return <div>\r\n    {editMode\r\n      ? <div className='profile__status' onBlur={disableEditMode}>\r\n        <input autoFocus={true} type=\"text\" onChange={onStatusChange} value={status} />\r\n      </div>\r\n      : <div className='profile__status' onDoubleClick={enableEditMode}>\r\n        <span>{props.status ? props.status : 'Empty status'}</span>\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default ProfileStatus","import './Profile.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n// import Jpg from './../../imgs/babyYoda.jpg';\r\nimport Preloader from './../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport profile_default_pic from '../../imgs/profile_default_pic.png'\r\nimport { useState } from 'react';\r\n\r\nconst Profile = (props) => {\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.state.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div className=\"profile\">\r\n      <ProfileStatus status={props.state.status} isOwner={props.isOwner} updateStatus={props.updateStatus} />\r\n      {/* <div className=\"profile_item bgc__transparent\">\r\n        <img className=\"profile_bg_img\" src=\"https://www.w3schools.com/howto/img_snow_wide.jpg\" alt=\"\" />\r\n      </div> */}\r\n      <div className=\"profile_inner profile_item\">\r\n        <div className=\"avatar_img_container\">\r\n          <img className=\"avatar_img\"\r\n            src={props.state.profile.photos.large || profile_default_pic}\r\n            alt=\"\" />\r\n          <div className=\"avatar_change\">\r\n            <label for=\"file-upload\" class=\"custom-file-upload\">\r\n              <i class=\"fa fa-cloud-upload\">Upload photo</i>\r\n            </label>\r\n            <input id=\"file-upload\" type=\"file\" onChange={onMainPhotoSelected} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile_info\">\r\n          <div className=\"profile_info_inner\">\r\n            <div className=\"profile_name profile_title\">{props.state.profile.fullName}</div>\r\n            <div className=\"profile_info__item\">Looking for a job:\r\n            <span>{props.state.profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n            </div>\r\n            <div className=\"profile_info__item\">Looking for a job description:\r\n            <span>{props.state.profile.lookingForAJobDescription}</span>\r\n            </div>\r\n            <div className=\"profile_info__item\">About me:\r\n            <span>{props.state.profile.aboutMe}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile_info_inner\">\r\n            {Object.keys(props.state.profile.contacts).map((key) => {\r\n              return <div className=\"profile_info__item\">{key}:\r\n                <a href={props.state.profile.contacts[key]}><span>{props.state.profile.contacts[key]}</span></a>\r\n              </div>\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import './Users.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport profile_default_pic from '../../imgs/profile_default_pic.png'\r\n\r\nlet User = (props) => {\r\n  \r\n  return (\r\n    <div className=\"users_item\" key={props.user.key}>\r\n      <div className=\"user_profile\">\r\n        <NavLink to={`/profile/${props.user.id}`}>\r\n          <div className=\"users_img\">\r\n            {/* <img src={props.img} alt=\"\" /> */}\r\n            <img src={props.user.photos.small || profile_default_pic} alt=\"\" />\r\n          </div>\r\n        </NavLink>\r\n        {props.user.followed ?\r\n          <div className=\"user_profile__btn active\" onClick={() => { props.unfollowUser(props.user.id) }}><button disabled={props.isFollowingInProgress.some(id => id === props.user.id)}>unfollow</button></div> :\r\n          <div className=\"user_profile__btn\" onClick={() => { props.followUser(props.user.id) }}><button disabled={props.isFollowingInProgress.some(id => id === props.user.id)}>follow</button></div>}\r\n      </div>\r\n      <div className=\"user_content\">\r\n        <NavLink to={`/profile/${props.user.id}`}>\r\n          <div className=\"user_name\">{props.user.name}</div>\r\n        </NavLink>\r\n        <div className=\"user_status\">{props.user.status}</div>\r\n      </div>\r\n      <div className=\"user_location\">\r\n        {/* <div className=\"\">{props.location.country}</div>\r\n        <div className=\"\">{props.location.city}</div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default User\r\n","import '../Profile/Profile';\r\nimport './Users.css';\r\nimport Preloader from './../common/Preloader/Preloader';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport User from './User';\r\n// import Pagination from '../common/Pagination/Pagination';\r\n\r\nlet Users = (props) => {\r\n\r\n  let pagesCount = Math.ceil(props.state.totalUsersCount / props.state.pageSize)\r\n\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    props.onPageChanged(value);\r\n  };\r\n\r\n  // let onFollow = (id) => {\r\n  //   props.followingInProgress(true, id)\r\n  //   usersAPI.followUser(id).then(response => {\r\n  //     if (response.data.resultCode === 0) {\r\n  //       (props.followUser(id))\r\n  //     }\r\n  //     props.followingInProgress(false, id)\r\n  //   });\r\n  // }\r\n\r\n  // let onUnFollow = (id) => {\r\n  //   props.followingInProgress(true, id)\r\n  //   usersAPI.unFollowUser(id).then(response => {\r\n  //     if (response.data.resultCode === 0) {\r\n  //       (props.unfollowUser(id))\r\n  //     }\r\n  //     props.followingInProgress(false, id)\r\n  //   });\r\n  // }\r\n  // if (props.state.isFetching) return <Preloader />\r\n  return <div className=\"users\">\r\n    <div className=\"users_inner\">\r\n      <div className=\"profile_title users_title\">Users</div>\r\n      <div className=\"pagination users__pagination\">\r\n        {/* {pages.map(p => {\r\n          return <span className={props.state.currentPage === p && 'active'} onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n        })} */}\r\n      <Pagination\r\n        count={pagesCount}\r\n        page={props.state.currentPage}\r\n        onChange={handleChange}\r\n        siblingCount={2}\r\n      />\r\n      </div>\r\n      {\r\n        props.state.isFetching && <Preloader /> \r\n      }\r\n      {props.state.users.map(user =>\r\n        <User \r\n        user={user}\r\n        followUser={props.followUser}\r\n        unfollowUser={props.unfollowUser}\r\n        isFollowingInProgress={props.state.isFollowingInProgress}\r\n        key={props.key}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  </div >\r\n}\r\n\r\nexport default Users\r\n","import './Users.css';\r\nimport { followUser, unfollowUser, requestUsers, setCurrentPage } from './../../redux/reducers/usersReducer';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport queryString from 'query-string'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  pageChangedOnUrl() {\r\n    let value = queryString.parse(this.props.location.search);\r\n    let currentPage = Number(value.page)\r\n    if (!currentPage) {\r\n      currentPage = this.props.state.currentPage\r\n      this.props.history.push(`/users?page=${currentPage}`)\r\n      this.props.requestUsers(currentPage, this.props.state.pageSize)\r\n    }\r\n    // this.props.setCurrentPage(currentPage)\r\n    this.props.requestUsers(currentPage, this.props.state.pageSize)\r\n  }\r\n\r\n  onPageChanged = (page) => {\r\n    // this.props.requestUsers(page.selected, this.props.state.pageSize)\r\n    this.props.history.push(`/users?page=${page}`)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.props.toggleIsFetching(true)\r\n    // usersAPI.requestUsers(this.props.state.currentPage, this.props.state.pageSize).then(data => {\r\n    //   this.props.setUsers(data.items)\r\n    //   this.props.setTotalCount(data.totalCount)\r\n    //   this.props.toggleIsFetching(false)\r\n    // });\r\n    // this.props.requestUsers(this.props.state.currentPage, this.props.state.pageSize)\r\n    this.pageChangedOnUrl()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let value = queryString.parse(this.props.location.search);\r\n    let currentPage = value.page\r\n    let prevValue = queryString.parse(prevProps.location.search);\r\n    let prevPage = prevValue.page\r\n    if (currentPage !== prevPage) {\r\n      this.pageChangedOnUrl()\r\n    }\r\n  }\r\n\r\n\r\n  // let users = props.state.users.map(u =>\r\n  //   <User id={u.id} photo_small={u.photos.small} key={u.id} name={u.name} followed={u.followed} status={u.status} unfollowUser={props.unfollowUser} followUser={props.followUser} />)\r\n  // <User id={u.id} photo_small={u.photo.small} key={u.id} name={u.name} followed={u.followed} status={u.status} location={u.location} unfollowUser={props.unfollowUser} followUser={props.followUser} />)\r\n\r\n  render() {\r\n    return <Users\r\n      state={this.props.state}\r\n      onPageChanged={this.onPageChanged}\r\n      followUser={this.props.followUser}\r\n      unfollowUser={this.props.unfollowUser}\r\n      followingInProgress={this.props.followingInProgress}\r\n    />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    { state: state.usersPage }\r\n  )\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return (\r\n//     {\r\n//       followUser: (userId) => {\r\n//         dispatch(followUserAC(userId))\r\n//       },\r\n//       unfollowUser: (userId) => {\r\n//         dispatch(unfollowUserAC(userId))\r\n//       },\r\n//       setUsers: (users) => {\r\n//         dispatch(setUsersAC(users))\r\n//       },\r\n//       setCurrentPage: (page) => {\r\n//         dispatch(setCurrentPageAC(page))\r\n//       },\r\n//       setTotalCount: (number) => {\r\n//         dispatch(setTotalCountAC(number))\r\n//       },\r\n//       toggleIsFetching: (IsFetching) => {\r\n//         dispatch(toggleIsFetchingAC(IsFetching))\r\n//       },\r\n//     }\r\n//   )\r\n// }\r\n\r\nlet mapDispatchToProps = {\r\n  followUser,\r\n  unfollowUser,\r\n  requestUsers,\r\n  setCurrentPage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UsersContainer))\r\n"],"sourceRoot":""}