{"version":3,"sources":["utils/validators/validators.js","components/common/FormControl/FormControls.jsx","components/common/FormControl/FormControls.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","imgs/profile_default_pic.png","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Dialogs/Contact/Contacts.jsx","imgs/send.svg","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialog/DialogContainer.jsx","components/Dialogs/Dialogs.jsx","hok/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthC","length","Element","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","active","Post","href","src","img","alt","title","name","text","likes","maxLength30","Input","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","type","placeholder","validate","MyPosts","memo","posts","state","map","post","id","data","addPost","MyPostsContainer","connect","profilePage","dispatch","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","isOwner","Profile","profile","photos","large","profile_default_pic","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","target","files","savePhoto","Preloader","Contact","to","Contacts","contact","Message","right","author","message","AddMessageReduxForm","Send","Dialog","dialog","d","path","render","addMessage","DialogContainer","dialogsPage","addMessageActionCreate","Dialogs","mapStateToProps","isAuth","auth","Component","AuthRedirectComponent","withAuthRedirect"],"mappings":"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","file":"static/js/4.ea18f083.chunk.js","sourcesContent":["export const required = value => {\r\n  if (!value) return 'Required!'\r\n  return undefined\r\n}\r\n\r\nexport const maxLengthC = (length) => (value) => {\r\n  if (value && value.length > length) return `Max length is ${length}`\r\n  return undefined\r\n}","import styles from './FormControls.module.css'\r\n\r\n// \r\n// solution from youtube \r\n// for work in Field need //// const Input = Element(\"input\");\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n    <Element {...input} {...props} />\r\n    {hasError && <span>{meta.error}</span>}\r\n  </div>\r\n};\r\n\r\n\r\n// \r\n// my solution\r\n// const FormControl = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n//     {props.children}\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }\r\n\r\n// export const Input = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// export const Textarea = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n\r\n// OLD\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${ hasError ? styles.error : ''}`}>\r\n//     <input {...input} {...props}/>\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3WObq\",\"error\":\"FormControls_error__teiEC\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/profile_default_pic.33564136.png\";","import './Post.css';\r\n// import Like from './../../../../imgs/like.svg';\r\nvar active = ''\r\n\r\nconst Post = (props) => {\r\n  if (props.active === '1') {\r\n    active = 'active'\r\n  } else {\r\n    active = ''\r\n  }\r\n  \r\n  // console.log(active)\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_top\">\r\n        <a href=\"#s\" className=\"post_img\">\r\n          <img src={props.img} alt=\"\" title={props.name} />\r\n        </a>\r\n        <div className=\"post_text\">{props.text}</div>\r\n      </div>\r\n      <div className=\"post_bottom\">\r\n        <button className={`post_like ${active}`}>\r\n          <img src=\"\" alt=\"\" />\r\n        </button>\r\n        <span className=\"post_like__count\">{props.likes}</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import './MyPosts.css';\r\nimport Post from './Posts/Post';\r\nimport React, { memo } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthC, required } from '../../../utils/validators/validators'\r\n// import { Input } from './../../common/FormControl/FormControls';\r\nimport { Element } from './../../common/FormControl/FormControls';\r\n\r\n// onKeyDown={newFun} onChange={updatePost} value={props.state.newPostText}\r\nconst maxLength30 = maxLengthC(30)\r\n\r\n// for Field component={}\r\nconst Input = Element(\"input\");\r\n\r\nlet MyPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} className=\"posts_form\">\r\n    <Field component={Input} name=\"text\" type=\"text\" className=\"posts_input\" placeholder=\"Your news...\" validate={[maxLength30, required]}/>\r\n    <button type=\"submit\" className=\"posts_btn\">Send</button>\r\n  </form>\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'MyPost' })(MyPostForm)\r\n\r\nconst MyPosts = memo(props => {\r\n  let posts = props.state.posts.map(post => <Post id={post.id} img={post.img} name={post.name} text={post.text} likes={post.likes} active={post.active} key={post.id} />)\r\n\r\n  // let addPost = () => {\r\n  //   props.addPost()\r\n  // }\r\n\r\n  // let updatePost = (e) => {\r\n  //   let text = e.target.value;\r\n  //   props.updatePostText(text)\r\n  // }\r\n\r\n  // let newFun = (e) => {\r\n  //   if (e.keyCode === 13) {\r\n  //     addPost();\r\n  //   }\r\n  // }\r\n\r\n  let addNewPost = (data) => {\r\n    props.addPost(data.text)\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile_item my_posts\">\r\n      <div className=\"my_posts__inner\">\r\n        <div className=\"posts_title profile_title\">My posts</div>\r\n        <MyPostReduxForm onSubmit={addNewPost}/>\r\n        <div className=\"posts\">\r\n          {posts}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts","import { addPost } from './../../../redux/reducers/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {\r\n//         (store) => {\r\n//           let state = store.getState()\r\n\r\n//           let onAddPost = () => {\r\n//             // props.addPost()\r\n//             // props.dispatch({type: 'ADD-POST'})\r\n//             store.dispatch(addPostActionCreate())\r\n//           }\r\n\r\n//           let updatePost = (text) => {\r\n//             // let text = newPostElement.current.value;\r\n//             // props.updatePostText(text)\r\n//             // props.dispatch({type: 'UPDATE-POST-TEXT', text: text})\r\n//             store.dispatch(updatePostTextActionCreate(text))\r\n//           }\r\n//           return (\r\n//             <MyPosts state={state.profilePage} addPost={onAddPost} updatePostText={updatePost} />\r\n//           )\r\n//         }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {state: state.profilePage}\r\n  )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return (\r\n    {\r\n    addPost: (text) => {\r\n      dispatch(addPost(text))\r\n    },\r\n    // updatePostText: (text) => {\r\n    //   dispatch(updatePostTextActionCreate(text))\r\n    // },\r\n    }\r\n  )\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  // let editMode = stateWithSetState[0]\r\n  // let setEditMode = stateWithSetState[1]\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  const enableEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true)\r\n    }\r\n  }\r\n  const disableEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  return <div>\r\n    {editMode\r\n      ? <div className='profile__status' onBlur={disableEditMode}>\r\n        <input autoFocus={true} type=\"text\" onChange={onStatusChange} value={status} />\r\n      </div>\r\n      : <div className='profile__status' onDoubleClick={enableEditMode}>\r\n        <span>{props.status ? props.status : 'Empty status'}</span>\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default ProfileStatus","import './Profile.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n// import Jpg from './../../imgs/babyYoda.jpg';\r\nimport Preloader from './../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport profile_default_pic from '../../imgs/profile_default_pic.png'\r\n\r\nconst Profile = (props) => {\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  if (!props.state.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div className=\"profile\">\r\n      <ProfileStatus status={props.state.status} isOwner={props.isOwner} updateStatus={props.updateStatus}/>\r\n      {/* <div className=\"profile_item bgc__transparent\">\r\n        <img className=\"profile_bg_img\" src=\"https://www.w3schools.com/howto/img_snow_wide.jpg\" alt=\"\" />\r\n      </div> */}\r\n      <div className=\"profile_inner profile_item\">\r\n        <img className=\"avatar_img\" \r\n        src={props.state.profile.photos.large || profile_default_pic} \r\n        alt=\"\" />\r\n        <div className=\"profile_info\">\r\n          <div className=\"profile_info_inner\">\r\n            <div className=\"profile_name profile_title\">{props.state.profile.fullName}</div>\r\n            <div className=\"profile_info__item\">Looking for a job:\r\n            <span>{props.state.profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n            </div>\r\n            <div className=\"profile_info__item\">Looking for a job description:\r\n            <span>{props.state.profile.lookingForAJobDescription}</span>\r\n            </div>\r\n            <div className=\"profile_info__item\">About me:\r\n            <span>{props.state.profile.aboutMe}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile_info_inner\">\r\n            <div className=\"profile_info__item\">Facebook:\r\n            <a href={props.state.profile.contacts.facebook}><span>{props.state.profile.contacts.facebook}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Website:\r\n            <a href={props.state.profile.contacts.website}><span>{props.state.profile.contacts.website}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">VK:\r\n            <a href={props.state.profile.contacts.vk}><span>{props.state.profile.contacts.vk}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Twitter:\r\n            <a href={props.state.profile.contacts.twitter}><span>{props.state.profile.contacts.twitter}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Instagram:\r\n            <a href={props.state.profile.contacts.instagram}><span>{props.state.profile.contacts.instagram}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Youtube:\r\n            <a href={props.state.profile.contacts.youtube}><span>{props.state.profile.contacts.youtube}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Github:\r\n            <a href={props.state.profile.contacts.github}><span>{props.state.profile.contacts.github}</span></a>\r\n            </div>\r\n            <div className=\"profile_info__item\">Main link:\r\n            <a href={props.state.profile.contacts.mainLink}><span>{props.state.profile.contacts.mainLink}</span></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div><input type=\"file\" onChange={onMainPhotoSelected}/></div>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import { NavLink } from 'react-router-dom';\r\n\r\nconst Contacts = (props) => {\r\n  var contacts = props.state.contact.map(contact => <Contact id={contact.id} img={contact.img} key={contact.id} name={contact.name} />)\r\n  return contacts\r\n}\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <NavLink to={`/dialogs/${props.id}`} className=\"dialogs_inner__item\">\r\n      <div className=\"post_img dialog_img\">\r\n        <img src={props.img} alt=\"\" />\r\n      </div>\r\n      <div className=\"post_text\">{props.name}</div>\r\n    </NavLink>\r\n\r\n  )\r\n}\r\n\r\nexport default Contacts","export default __webpack_public_path__ + \"static/media/send.4638400f.svg\";","import Send from './../../../imgs/send.svg';\r\nimport { Route } from 'react-router-dom';\r\nimport React from 'react';\r\n// import { addMessageActionCreate, updateMessageTextActionCreate } from './../../../redux/reducers/dialogsReducer';\r\nimport { Field, reduxForm } from \"redux-form\"\r\n\r\nconst Message = (props) => {\r\n  var right = ''\r\n  if (props.author === 'me') {\r\n    right = 'right'\r\n  }\r\n  return (\r\n    <div className={`dialog ${right}`}>\r\n      <div className=\"message\">{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} className=\"dialog_form\">\r\n        <Field name=\"message\" type=\"text\" className=\"dialog_input\" component='input'/>\r\n        <button className=\"dialog_input__btn\">\r\n          <img src={Send} alt=\"\" className=\"\" />\r\n        </button>\r\n      </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(addMessageForm)\r\n\r\n\r\nconst Dialog = (props) => {\r\n\r\n  var dialog = props.state.dialog.map(d => <Message id={d.id} message={d.message} key={d.id} author={d.author} />)\r\n\r\n  // let addMessage = () => {\r\n  //   props.addMessage()\r\n  //   // props.dispatch({type: 'ADD-MESSAGE'})\r\n  //   // props.dispatch(addMessageActionCreate())\r\n  // }\r\n\r\n  // let updatePost = (e) => {\r\n  //   let text = e.target.value\r\n  //   props.updateMessageText(text)\r\n  //   // props.dispatch({type: 'UPDATE-MESSAGE-TEXT', text: text})\r\n  //   // props.dispatch(updateMessageTextActionCreate(text))\r\n  // }\r\n\r\n  // let newFun = (e) => {\r\n  //   if (e.keyCode === 13) {\r\n  //     addMessage()\r\n  //   }\r\n  // }\r\n\r\n  let addNewMessage = (data) => {\r\n    props.addMessage(data.message)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dialog_area\">\r\n      <div className=\"dialog_area__inner\">\r\n        {/* <Message message=\"sadadasassa\" /> */}\r\n        <Route path='/dialogs/1' render={() => dialog} />\r\n        <Route path='/dialogs/2' render={() => 'sagdsaf'} />\r\n        {/* { dialog } */}\r\n      </div>\r\n      <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog","import { addMessageActionCreate } from '../../../redux/reducers/dialogsReducer'; \r\nimport Dialog from './Dialog';\r\nimport { connect } from 'react-redux';\r\n\r\n// const DialogContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState()\r\n\r\n//         let onAddMessage = () => {\r\n//           // props.addMessage()\r\n//           // props.dispatch({type: 'ADD-MESSAGE'})\r\n//           store.dispatch(addMessageActionCreate())\r\n//         }\r\n\r\n//         let updatePost = (text) => {\r\n//           // let text = e.target.value\r\n//           // props.updateMessageText(text)\r\n//           // props.dispatch({type: 'UPDATE-MESSAGE-TEXT', text: text})\r\n//           store.dispatch(updateMessageTextActionCreate(text))\r\n//         }\r\n//         return (\r\n//           <Dialog state={state.dialogsPage} addMessage={onAddMessage} updateMessageText={updatePost} />\r\n//         )\r\n//       }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {state: state.dialogsPage}\r\n  )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    addMessage: (message) => {\r\n      dispatch(addMessageActionCreate(message))\r\n    },\r\n    // updateMessageText: (text) => {\r\n    //   dispatch(updateMessageTextActionCreate(text))\r\n    // },\r\n  })\r\n}\r\n\r\nconst DialogContainer = connect(mapStateToProps, mapDispatchToProps)(Dialog)\r\n\r\n\r\nexport default DialogContainer","import '../Profile/Profile'\r\nimport './Dialogs.css'\r\nimport Contacts from './Contact/Contacts';\r\nimport DialogContainer from './Dialog/DialogContainer';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n  // var state = props.store.getState()\r\n  // var contacts = props.state.contact.map(contact => <Contact id={contact.id} img={contact.img} name={contact.name} />)\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs_inner\">\r\n        <div className=\"dialogs_title profile_title\">Dialogs</div>\r\n        <Contacts state={props.state} />\r\n      </div>\r\n      <DialogContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  )\r\n}\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n  let AuthRedirectComponent = (props) => {\r\n    if (!props.isAuth) {return <Redirect to='/login' />}\r\n    return <Component {...props} />\r\n  }\r\n  AuthRedirectComponent = connect(mapStateToProps)(AuthRedirectComponent)\r\n  return AuthRedirectComponent\r\n}","import { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from './../../hok/withAuthRedirect';\r\n// import compose from './../Profile/ProfileContainer';\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState().dialogsPage\r\n//         return (\r\n//           <Dialogs state={state}/>\r\n//         )\r\n//       }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      state: state.dialogsPage,\r\n    }\r\n  )\r\n}\r\n\r\n// let mapDispatchToProps = () => {\r\n//   return ()\r\n// }\r\n\r\nexport default connect(mapStateToProps)(withAuthRedirect(Dialogs))\r\n\r\n// export default compose(\r\n//   connect(mapStateToProps),\r\n//   withAuthRedirect\r\n// )(Dialogs)"],"sourceRoot":""}