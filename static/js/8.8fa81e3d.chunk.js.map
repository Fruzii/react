{"version":3,"sources":["components/Dialogs/Contact/Contacts.jsx","imgs/send.svg","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialog/DialogContainer.jsx","components/Dialogs/Dialogs.jsx","hok/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["Contact","props","to","id","className","src","img","alt","name","Contacts","state","contact","map","Message","right","author","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","component","Send","Dialog","dialog","d","path","render","data","addMessage","DialogContainer","connect","dialogsPage","dispatch","addMessageActionCreate","Dialogs","mapStateToProps","isAuth","auth","Component","AuthRedirectComponent","withAuthRedirect"],"mappings":"yKAOMA,EAAU,SAACC,GACf,OACE,eAAC,IAAD,CAASC,GAAE,mBAAcD,EAAME,IAAMC,UAAU,sBAA/C,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKC,IAAKJ,EAAMK,IAAKC,IAAI,OAE3B,qBAAKH,UAAU,YAAf,SAA4BH,EAAMO,WAMzBC,EAjBE,SAACR,GAEhB,OADeA,EAAMS,MAAMC,QAAQC,KAAI,SAAAD,GAAO,OAAI,cAAC,EAAD,CAASR,GAAIQ,EAAQR,GAAIG,IAAKK,EAAQL,IAAsBE,KAAMG,EAAQH,MAA1BG,EAAQR,Q,QCH7F,MAA0B,iC,gCCMnCU,EAAU,SAACZ,GACf,IAAIa,EAAQ,GAIZ,MAHqB,OAAjBb,EAAMc,SACRD,EAAQ,SAGR,qBAAKV,UAAS,iBAAYU,GAA1B,SACE,qBAAKV,UAAU,UAAf,SAA0BH,EAAMe,aAchCC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EATL,SAACjB,GACtB,OAAO,uBAAMmB,SAAUnB,EAAMoB,aAAcjB,UAAU,cAA9C,UACD,cAACkB,EAAA,EAAD,CAAOd,KAAK,UAAUe,KAAK,OAAOnB,UAAU,eAAeoB,UAAU,UACrE,wBAAQpB,UAAU,oBAAlB,SACE,qBAAKC,IAAKoB,EAAMlB,IAAI,GAAGH,UAAU,aAgD5BsB,EAxCA,SAACzB,GAEd,IAAI0B,EAAS1B,EAAMS,MAAMiB,OAAOf,KAAI,SAAAgB,GAAC,OAAI,cAAC,EAAD,CAASzB,GAAIyB,EAAEzB,GAAIa,QAASY,EAAEZ,QAAoBD,OAAQa,EAAEb,QAAhBa,EAAEzB,OAyBvF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UAEE,cAAC,IAAD,CAAOyB,KAAK,aAAaC,OAAQ,kBAAMH,KACvC,cAAC,IAAD,CAAOE,KAAK,aAAaC,OAAQ,iBAAM,gBAGzC,cAACb,EAAD,CAAqBG,SAZL,SAACW,GACnB9B,EAAM+B,WAAWD,EAAKf,gBCFXiB,EAHSC,aAjBF,SAACxB,GACrB,MACE,CAACA,MAAOA,EAAMyB,gBAIO,SAACC,GACxB,MAAQ,CACNJ,WAAY,SAAChB,GACXoB,EAASC,YAAuBrB,QAQdkB,CAA6CR,GC7BtDY,EAfC,SAACrC,GAIf,OACE,sBAAKG,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,8BAAf,qBACA,cAAC,EAAD,CAAUM,MAAOT,EAAMS,WAEzB,cAAC,EAAD,Q,OCZF6B,EAAkB,SAAC7B,GACrB,MACE,CACE8B,OAAQ9B,EAAM+B,KAAKD,SC0BVN,uBAZO,SAACxB,GACrB,MACE,CACEA,MAAOA,EAAMyB,eASJD,CDrBe,SAACQ,GAC7B,IAAIC,EAAwB,SAAC1C,GAC3B,OAAKA,EAAMuC,OACJ,cAACE,EAAD,eAAezC,IADK,cAAC,IAAD,CAAUC,GAAG,YAI1C,OADAyC,EAAwBT,YAAQK,EAARL,CAAyBS,GCgBXC,CAAiBN","file":"static/js/8.8fa81e3d.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nconst Contacts = (props) => {\r\n  var contacts = props.state.contact.map(contact => <Contact id={contact.id} img={contact.img} key={contact.id} name={contact.name} />)\r\n  return contacts\r\n}\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <NavLink to={`/dialogs/${props.id}`} className=\"dialogs_inner__item\">\r\n      <div className=\"post_img dialog_img\">\r\n        <img src={props.img} alt=\"\" />\r\n      </div>\r\n      <div className=\"post_text\">{props.name}</div>\r\n    </NavLink>\r\n\r\n  )\r\n}\r\n\r\nexport default Contacts","export default __webpack_public_path__ + \"static/media/send.4638400f.svg\";","import Send from './../../../imgs/send.svg';\r\nimport { Route } from 'react-router-dom';\r\nimport React from 'react';\r\n// import { addMessageActionCreate, updateMessageTextActionCreate } from './../../../redux/reducers/dialogsReducer';\r\nimport { Field, reduxForm } from \"redux-form\"\r\n\r\nconst Message = (props) => {\r\n  var right = ''\r\n  if (props.author === 'me') {\r\n    right = 'right'\r\n  }\r\n  return (\r\n    <div className={`dialog ${right}`}>\r\n      <div className=\"message\">{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} className=\"dialog_form\">\r\n        <Field name=\"message\" type=\"text\" className=\"dialog_input\" component='input'/>\r\n        <button className=\"dialog_input__btn\">\r\n          <img src={Send} alt=\"\" className=\"\" />\r\n        </button>\r\n      </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(addMessageForm)\r\n\r\n\r\nconst Dialog = (props) => {\r\n\r\n  var dialog = props.state.dialog.map(d => <Message id={d.id} message={d.message} key={d.id} author={d.author} />)\r\n\r\n  // let addMessage = () => {\r\n  //   props.addMessage()\r\n  //   // props.dispatch({type: 'ADD-MESSAGE'})\r\n  //   // props.dispatch(addMessageActionCreate())\r\n  // }\r\n\r\n  // let updatePost = (e) => {\r\n  //   let text = e.target.value\r\n  //   props.updateMessageText(text)\r\n  //   // props.dispatch({type: 'UPDATE-MESSAGE-TEXT', text: text})\r\n  //   // props.dispatch(updateMessageTextActionCreate(text))\r\n  // }\r\n\r\n  // let newFun = (e) => {\r\n  //   if (e.keyCode === 13) {\r\n  //     addMessage()\r\n  //   }\r\n  // }\r\n\r\n  let addNewMessage = (data) => {\r\n    props.addMessage(data.message)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dialog_area\">\r\n      <div className=\"dialog_area__inner\">\r\n        {/* <Message message=\"sadadasassa\" /> */}\r\n        <Route path='/dialogs/1' render={() => dialog} />\r\n        <Route path='/dialogs/2' render={() => 'sagdsaf'} />\r\n        {/* { dialog } */}\r\n      </div>\r\n      <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog","import { addMessageActionCreate } from '../../../redux/reducers/dialogsReducer'; \r\nimport Dialog from './Dialog';\r\nimport { connect } from 'react-redux';\r\n\r\n// const DialogContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState()\r\n\r\n//         let onAddMessage = () => {\r\n//           // props.addMessage()\r\n//           // props.dispatch({type: 'ADD-MESSAGE'})\r\n//           store.dispatch(addMessageActionCreate())\r\n//         }\r\n\r\n//         let updatePost = (text) => {\r\n//           // let text = e.target.value\r\n//           // props.updateMessageText(text)\r\n//           // props.dispatch({type: 'UPDATE-MESSAGE-TEXT', text: text})\r\n//           store.dispatch(updateMessageTextActionCreate(text))\r\n//         }\r\n//         return (\r\n//           <Dialog state={state.dialogsPage} addMessage={onAddMessage} updateMessageText={updatePost} />\r\n//         )\r\n//       }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {state: state.dialogsPage}\r\n  )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    addMessage: (message) => {\r\n      dispatch(addMessageActionCreate(message))\r\n    },\r\n    // updateMessageText: (text) => {\r\n    //   dispatch(updateMessageTextActionCreate(text))\r\n    // },\r\n  })\r\n}\r\n\r\nconst DialogContainer = connect(mapStateToProps, mapDispatchToProps)(Dialog)\r\n\r\n\r\nexport default DialogContainer","import './Dialogs.css'\r\nimport Contacts from './Contact/Contacts';\r\nimport DialogContainer from './Dialog/DialogContainer';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n  // var state = props.store.getState()\r\n  // var contacts = props.state.contact.map(contact => <Contact id={contact.id} img={contact.img} name={contact.name} />)\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs_inner\">\r\n        <div className=\"dialogs_title profile_title\">Dialogs</div>\r\n        <Contacts state={props.state} />\r\n      </div>\r\n      <DialogContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  )\r\n}\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n  let AuthRedirectComponent = (props) => {\r\n    if (!props.isAuth) {return <Redirect to='/login' />}\r\n    return <Component {...props} />\r\n  }\r\n  AuthRedirectComponent = connect(mapStateToProps)(AuthRedirectComponent)\r\n  return AuthRedirectComponent\r\n}","import { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from './../../hok/withAuthRedirect';\r\n// import compose from './../Profile/ProfileContainer';\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState().dialogsPage\r\n//         return (\r\n//           <Dialogs state={state}/>\r\n//         )\r\n//       }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      state: state.dialogsPage,\r\n    }\r\n  )\r\n}\r\n\r\n// let mapDispatchToProps = () => {\r\n//   return ()\r\n// }\r\n\r\nexport default connect(mapStateToProps)(withAuthRedirect(Dialogs))\r\n\r\n// export default compose(\r\n//   connect(mapStateToProps),\r\n//   withAuthRedirect\r\n// )(Dialogs)"],"sourceRoot":""}