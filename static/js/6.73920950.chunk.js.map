{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","utils/validators/validators.js","components/common/FormControl/FormControls.jsx","components/common/FormControl/FormControls.module.css","components/Login/Login.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","required","value","maxLengthC","Element","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","placeholder","name","component","validate","id","htmlFor","Login","auth","isAuth","to","formData","console","log","login","LoginContainer","this","React","Component","connect","state"],"mappings":"wGAAA,6CACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,YAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,I,iCCjBT,oEAAO,IAAMS,EAAW,SAAAC,GACtB,IAAKA,EAAO,MAAO,aAIRC,EAAa,SAACP,GAAD,OAAY,SAACM,GACrC,GAAIA,GAASA,EAAMN,OAASA,EAAQ,MAAM,iBAAN,OAAwBA,M,gHCDjDQ,EAAU,SAAAA,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCACzDC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,sBAAKC,UAAS,UAAKC,IAAOC,YAAZ,YAA2BL,EAAWI,IAAOF,MAAQ,IAAnE,UACL,cAAC,EAAD,2BAAaL,GAAWE,IACvBC,GAAY,+BAAOF,EAAKI,c,oBCR7BI,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,qKCOpEC,EAAQZ,YAAQ,SAuBhBa,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EArBP,SAACX,GACf,OAAO,uBAAMa,SAAUb,EAAMc,aAAtB,UACL,8BACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,QAAQC,KAAM,QAASC,UAAWT,EAAOU,SAAU,CAACzB,SAErF,8BACE,cAAC,IAAD,CAAOqB,KAAK,WAAWC,YAAY,WAAWC,KAAM,WAAYC,UAAWT,EAAOU,SAAU,CAACzB,SAE/F,gCACE,cAAC,IAAD,CAAOqB,KAAK,WAAWE,KAAK,aAAaG,GAAG,aAAaF,UAAW,UACpE,uBAAOG,QAAQ,aAAf,8BAEDrB,EAAMG,OAAS,8BACbH,EAAMG,QAET,8BACE,wBAAQY,KAAK,SAAb,2BAOFO,EAAQ,SAACtB,GAOX,OAAIA,EAAMuB,KAAKC,OAEN,cAAC,IAAD,CAAUC,GAAE,aAGd,gCACL,uCACA,cAACf,EAAD,CAAgBG,SAZD,SAACa,GAChBC,QAAQC,IAAIF,GACZ1B,EAAM6B,MAAMH,UAcVI,E,uKAEF,OAAO,cAACR,EAAD,eAAWS,KAAK/B,Y,GAFEgC,IAAMC,WAUpBC,uBAJO,SAACC,GACrB,MAAQ,CAACZ,KAAMY,EAAMZ,QAGiB,CAACM,WAA1BK,CAAkCJ","file":"static/js/6.73920950.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export const required = value => {\r\n  if (!value) return 'Required!'\r\n  return undefined\r\n}\r\n\r\nexport const maxLengthC = (length) => (value) => {\r\n  if (value && value.length > length) return `Max length is ${length}`\r\n  return undefined\r\n}","import styles from './FormControls.module.css'\r\n\r\n// \r\n// solution from youtube \r\n// for work in Field need //// const Input = Element(\"input\");\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n    <Element {...input} {...props} />\r\n    {hasError && <span>{meta.error}</span>}\r\n  </div>\r\n};\r\n\r\n\r\n// \r\n// my solution\r\n// const FormControl = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n//     {props.children}\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }\r\n\r\n// export const Input = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// export const Textarea = (props) => {\r\n//   const { input, meta, ...restProps } = props\r\n//   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n\r\n// OLD\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return <div className={`${styles.formControl} ${ hasError ? styles.error : ''}`}>\r\n//     <input {...input} {...props}/>\r\n//     {hasError && <span>{meta.error}</span>}\r\n//   </div>\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3WObq\",\"error\":\"FormControls_error__teiEC\"};","import { Field, reduxForm } from 'redux-form'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/reducers/authReducer' \r\nimport { Element } from './../common/FormControl/FormControls';\r\nimport { required } from './../../utils/validators/validators';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Input = Element('input')\r\n\r\nlet LoginForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field type='text' placeholder='Email' name={'email'} component={Input} validate={[required]}/>\r\n    </div>\r\n    <div>\r\n      <Field type=\"password\" placeholder='Password' name={'password'} component={Input} validate={[required]}/>\r\n    </div>\r\n    <div>\r\n      <Field type=\"checkbox\" name='rememberMe' id='rememberMe' component={'input'}/>\r\n      <label htmlFor='rememberMe'>  Remember me</label>\r\n    </div>\r\n    {props.error && <div>\r\n      {props.error}\r\n    </div>}\r\n    <div>\r\n      <button type=\"submit\">Login</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'Login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    console.log(formData)\r\n    props.login(formData)\r\n  }\r\n\r\n  if (props.auth.isAuth) {\r\n    // return <Redirect to={`/profile/${props.auth.id}`} />\r\n    return <Redirect to={`/profile`} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n  </div>\r\n}\r\n\r\nclass LoginContainer extends React.Component {\r\n  render () {\r\n    return <Login {...this.props}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({auth: state.auth})\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer)"],"sourceRoot":""}